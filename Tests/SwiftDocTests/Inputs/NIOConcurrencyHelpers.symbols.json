{"metadata":{"formatVersion":{"major":0,"minor":5,"patch":0},"generator":"Apple Swift version 5.3-dev (LLVM 959ceec77e6edf3, Swift c98d04b3f1aa51d)"},"module":{"name":"NIOConcurrencyHelpers","platform":{"architecture":"x86_64","vendor":"apple","operatingSystem":{"name":"macosx","minimumVersion":{"major":10,"minor":10,"patch":0}}}},"symbols":[{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC5storeyyxF","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic","store(_:)"],"names":{"title":"store(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":292,"character":8},"end":{"line":292,"character":66}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"start":{"line":293,"character":7},"end":{"line":293,"character":7}},"text":""},{"range":{"start":{"line":294,"character":8},"end":{"line":294,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":295,"character":8},"end":{"line":295,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":296,"character":8},"end":{"line":296,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":297,"character":7},"end":{"line":297,"character":7}},"text":""},{"range":{"start":{"line":298,"character":8},"end":{"line":298,"character":62}},"text":"- Parameter value: The new value to set the object to."}]},"functionSignature":{"parameters":[{"name":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":300,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_addyxSpy13AtomicWrapperQzG_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_add"],"names":{"title":"nio_atomic_add","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":25,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers4LockC4lockyyF","interfaceLanguage":"swift"},"pathComponents":["Lock","lock()"],"names":{"title":"lock()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":25}},"text":"Acquire the lock."},{"range":{"start":{"line":63,"character":7},"end":{"line":63,"character":7}},"text":""},{"range":{"start":{"line":64,"character":8},"end":{"line":64,"character":79}},"text":"Whenever possible, consider using `withLock` instead of this method and"},{"range":{"start":{"line":65,"character":8},"end":{"line":65,"character":44}},"text":"`unlock`, to simplify lock handling."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":66,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP14atomic_destroyyys13OpaquePointerVcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_destroy"],"names":{"title":"atomic_destroy","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_destroy"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_destroy"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_destroy"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":279,"character":15}}},{"kind":{"identifier":"swift.class","displayName":"Class"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic"],"names":{"title":"NIOAtomic","navigator":[{"kind":"identifier","spelling":"NIOAtomic"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomic"}]},"docComment":{"lines":[{"range":{"start":{"line":177,"character":4},"end":{"line":177,"character":51}},"text":"An encapsulation of an atomic primitive object."},{"range":{"start":{"line":178,"character":3},"end":{"line":178,"character":3}},"text":""},{"range":{"start":{"line":179,"character":4},"end":{"line":179,"character":61}},"text":"Atomic objects support a wide range of atomic operations:"},{"range":{"start":{"line":180,"character":3},"end":{"line":180,"character":3}},"text":""},{"range":{"start":{"line":181,"character":4},"end":{"line":181,"character":22}},"text":"- Compare and swap"},{"range":{"start":{"line":182,"character":4},"end":{"line":182,"character":9}},"text":"- Add"},{"range":{"start":{"line":183,"character":4},"end":{"line":183,"character":14}},"text":"- Subtract"},{"range":{"start":{"line":184,"character":4},"end":{"line":184,"character":14}},"text":"- Exchange"},{"range":{"start":{"line":185,"character":4},"end":{"line":185,"character":24}},"text":"- Load current value"},{"range":{"start":{"line":186,"character":4},"end":{"line":186,"character":25}},"text":"- Store current value"},{"range":{"start":{"line":187,"character":3},"end":{"line":187,"character":3}},"text":""},{"range":{"start":{"line":188,"character":4},"end":{"line":188,"character":70}},"text":"Atomic primitives are useful when building constructs that need to"},{"range":{"start":{"line":189,"character":4},"end":{"line":189,"character":68}},"text":"communicate or cooperate across multiple threads. In the case of"},{"range":{"start":{"line":190,"character":4},"end":{"line":190,"character":77}},"text":"SwiftNIO this usually involves communicating across multiple event loops."},{"range":{"start":{"line":191,"character":3},"end":{"line":191,"character":3}},"text":""},{"range":{"start":{"line":192,"character":4},"end":{"line":192,"character":74}},"text":"By necessity, all atomic values are references: after all, it makes no"},{"range":{"start":{"line":193,"character":4},"end":{"line":193,"character":77}},"text":"sense to talk about managing an atomic value when each time it's modified"},{"range":{"start":{"line":194,"character":4},"end":{"line":194,"character":50}},"text":"the thread that modified it gets a local copy!"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomic"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"NIOAtomicPrimitive","preciseIdentifier":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":195,"character":19}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC3addyxxF","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic","add(_:)"],"names":{"title":"add(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":231,"character":8},"end":{"line":231,"character":45}},"text":"Atomically adds `rhs` to this object."},{"range":{"start":{"line":232,"character":7},"end":{"line":232,"character":7}},"text":""},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":234,"character":8},"end":{"line":234,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":235,"character":8},"end":{"line":235,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":236,"character":7},"end":{"line":236,"character":7}},"text":""},{"range":{"start":{"line":237,"character":8},"end":{"line":237,"character":57}},"text":"- Parameter rhs: The value to add to this object."},{"range":{"start":{"line":238,"character":8},"end":{"line":238,"character":83}},"text":"- Returns: The previous value of this object, before the addition occurred."}]},"functionSignature":{"parameters":[{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":241,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9AtomicBoxC4loadxyF","interfaceLanguage":"swift"},"pathComponents":["AtomicBox","load()"],"names":{"title":"load()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":532,"character":8},"end":{"line":532,"character":62}},"text":"Atomically loads and returns the value of this object."},{"range":{"start":{"line":533,"character":7},"end":{"line":533,"character":7}},"text":""},{"range":{"start":{"line":534,"character":8},"end":{"line":534,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":535,"character":8},"end":{"line":535,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":536,"character":8},"end":{"line":536,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":537,"character":7},"end":{"line":537,"character":7}},"text":""},{"range":{"start":{"line":538,"character":8},"end":{"line":538,"character":117}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"start":{"line":539,"character":8},"end":{"line":539,"character":33}},"text":"           100% CPU load."},{"range":{"start":{"line":540,"character":7},"end":{"line":540,"character":7}},"text":""},{"range":{"start":{"line":541,"character":8},"end":{"line":541,"character":43}},"text":"- Returns: The value of this object"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"accessLevel":"public","availability":[{"domain":"*","message":"AtomicBox is deprecated without replacement because the original implementation doesn't work.","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":542,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5storeyyxF","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","store(_:)"],"names":{"title":"store(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":134,"character":8},"end":{"line":134,"character":66}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"start":{"line":135,"character":7},"end":{"line":135,"character":7}},"text":""},{"range":{"start":{"line":136,"character":8},"end":{"line":136,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":138,"character":8},"end":{"line":138,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":139,"character":7},"end":{"line":139,"character":7}},"text":""},{"range":{"start":{"line":140,"character":8},"end":{"line":140,"character":62}},"text":"- Parameter value: The new value to set the object to."}]},"functionSignature":{"parameters":[{"name":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":142,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3addyxxF","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","add(_:)"],"names":{"title":"add(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":83,"character":8},"end":{"line":83,"character":45}},"text":"Atomically adds `rhs` to this object."},{"range":{"start":{"line":84,"character":7},"end":{"line":84,"character":7}},"text":""},{"range":{"start":{"line":85,"character":8},"end":{"line":85,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":86,"character":8},"end":{"line":86,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":87,"character":8},"end":{"line":87,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":88,"character":7},"end":{"line":88,"character":7}},"text":""},{"range":{"start":{"line":89,"character":8},"end":{"line":89,"character":57}},"text":"- Parameter rhs: The value to add to this object."},{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":83}},"text":"- Returns: The previous value of this object, before the addition occurred."}]},"functionSignature":{"parameters":[{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":92,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9AtomicBoxC8exchange4withxx_tF","interfaceLanguage":"swift"},"pathComponents":["AtomicBox","exchange(with:)"],"names":{"title":"exchange(with:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":498,"character":8},"end":{"line":498,"character":74}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"start":{"line":499,"character":7},"end":{"line":499,"character":7}},"text":""},{"range":{"start":{"line":500,"character":8},"end":{"line":500,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":501,"character":8},"end":{"line":501,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":502,"character":8},"end":{"line":502,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":503,"character":7},"end":{"line":503,"character":7}},"text":""},{"range":{"start":{"line":504,"character":8},"end":{"line":504,"character":117}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"start":{"line":505,"character":8},"end":{"line":505,"character":33}},"text":"           100% CPU load."},{"range":{"start":{"line":506,"character":7},"end":{"line":506,"character":7}},"text":""},{"range":{"start":{"line":507,"character":8},"end":{"line":507,"character":63}},"text":"- Parameter value: The new value to set this object to."},{"range":{"start":{"line":508,"character":8},"end":{"line":508,"character":60}},"text":"- Returns: The value previously held by this object."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","availability":[{"domain":"*","message":"AtomicBox is deprecated without replacement because the original implementation doesn't work.","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":509,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP16nio_atomic_storeyySpy13AtomicWrapperQzG_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_store"],"names":{"title":"nio_atomic_store","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":29,"character":15}}},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC5valueACyxGx_tcfc","interfaceLanguage":"swift"},"pathComponents":["ConditionLock","init(value:)"],"names":{"title":"init(value:)","navigator":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":129,"character":8},"end":{"line":129,"character":70}},"text":"Create the lock, and initialize the state variable to `value`."},{"range":{"start":{"line":130,"character":7},"end":{"line":130,"character":7}},"text":""},{"range":{"start":{"line":131,"character":8},"end":{"line":131,"character":72}},"text":"- Parameter value: The initial value to give the state variable."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":132,"character":11}}},{"kind":{"identifier":"swift.class","displayName":"Class"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC","interfaceLanguage":"swift"},"pathComponents":["ConditionLock"],"names":{"title":"ConditionLock","navigator":[{"kind":"identifier","spelling":"ConditionLock"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ConditionLock"}]},"docComment":{"lines":[{"range":{"start":{"line":114,"character":4},"end":{"line":114,"character":44}},"text":"A `Lock` with a built-in state variable."},{"range":{"start":{"line":115,"character":3},"end":{"line":115,"character":3}},"text":""},{"range":{"start":{"line":116,"character":4},"end":{"line":116,"character":89}},"text":"This class provides a convenience addition to `Lock`: it provides the ability to wait"},{"range":{"start":{"line":117,"character":4},"end":{"line":117,"character":76}},"text":"until the state variable is set to a specific value to acquire the lock."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable"}]},"declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ConditionLock"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Equatable","preciseIdentifier":"s:SQ"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":118,"character":19}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP12atomic_storeyys13OpaquePointerV_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_store"],"names":{"title":"atomic_store","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":285,"character":15}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_subyxs13OpaquePointerV_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_sub"],"names":{"title":"atomic_sub","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":282,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC3addyxxF","interfaceLanguage":"swift"},"pathComponents":["Atomic","add(_:)"],"names":{"title":"add(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":204,"character":8},"end":{"line":204,"character":45}},"text":"Atomically adds `rhs` to this object."},{"range":{"start":{"line":205,"character":7},"end":{"line":205,"character":7}},"text":""},{"range":{"start":{"line":206,"character":8},"end":{"line":206,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":207,"character":8},"end":{"line":207,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":208,"character":8},"end":{"line":208,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":209,"character":7},"end":{"line":209,"character":7}},"text":""},{"range":{"start":{"line":210,"character":8},"end":{"line":210,"character":57}},"text":"- Parameter rhs: The value to add to this object."},{"range":{"start":{"line":211,"character":8},"end":{"line":211,"character":83}},"text":"- Returns: The previous value of this object, before the addition occurred."}]},"functionSignature":{"parameters":[{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":213,"character":16}}},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic"],"names":{"title":"UnsafeEmbeddedAtomic","navigator":[{"kind":"identifier","spelling":"UnsafeEmbeddedAtomic"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeEmbeddedAtomic"}]},"docComment":{"lines":[{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":31}},"text":"An atomic primitive object."},{"range":{"start":{"line":35,"character":3},"end":{"line":35,"character":3}},"text":""},{"range":{"start":{"line":36,"character":4},"end":{"line":36,"character":107}},"text":"Before using `UnsafeEmbeddedAtomic`, please consider whether your needs can be met by `Atomic` instead."},{"range":{"start":{"line":37,"character":4},"end":{"line":37,"character":100}},"text":"`UnsafeEmbeddedAtomic` is a value type, but atomics are heap-allocated. Thus, it is only safe to"},{"range":{"start":{"line":38,"character":4},"end":{"line":38,"character":121}},"text":"use `UnsafeEmbeddedAtomic` in situations where the atomic can be guaranteed to be cleaned up (via calling `destroy`)."},{"range":{"start":{"line":39,"character":4},"end":{"line":39,"character":90}},"text":"If you cannot make these guarantees, use `Atomic` instead, which manages this for you."},{"range":{"start":{"line":40,"character":3},"end":{"line":40,"character":3}},"text":""},{"range":{"start":{"line":41,"character":4},"end":{"line":41,"character":61}},"text":"Atomic objects support a wide range of atomic operations:"},{"range":{"start":{"line":42,"character":3},"end":{"line":42,"character":3}},"text":""},{"range":{"start":{"line":43,"character":4},"end":{"line":43,"character":22}},"text":"- Compare and swap"},{"range":{"start":{"line":44,"character":4},"end":{"line":44,"character":9}},"text":"- Add"},{"range":{"start":{"line":45,"character":4},"end":{"line":45,"character":14}},"text":"- Subtract"},{"range":{"start":{"line":46,"character":4},"end":{"line":46,"character":14}},"text":"- Exchange"},{"range":{"start":{"line":47,"character":4},"end":{"line":47,"character":24}},"text":"- Load current value"},{"range":{"start":{"line":48,"character":4},"end":{"line":48,"character":25}},"text":"- Store current value"},{"range":{"start":{"line":49,"character":3},"end":{"line":49,"character":3}},"text":""},{"range":{"start":{"line":50,"character":4},"end":{"line":50,"character":70}},"text":"Atomic primitives are useful when building constructs that need to"},{"range":{"start":{"line":51,"character":4},"end":{"line":51,"character":68}},"text":"communicate or cooperate across multiple threads. In the case of"},{"range":{"start":{"line":52,"character":4},"end":{"line":52,"character":77}},"text":"SwiftNIO this usually involves communicating across multiple event loops."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeEmbeddedAtomic"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AtomicPrimitive","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":53,"character":14}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers4LockC04withC0yxxyKXEKlF","interfaceLanguage":"swift"},"pathComponents":["Lock","withLock(_:)"],"names":{"title":"withLock(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLock"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">(() "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLock"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">(() "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":61}},"text":"Acquire the lock for the duration of the given block."},{"range":{"start":{"line":91,"character":7},"end":{"line":91,"character":7}},"text":""},{"range":{"start":{"line":92,"character":8},"end":{"line":92,"character":77}},"text":"This convenience method should be preferred to `lock` and `unlock` in"},{"range":{"start":{"line":93,"character":8},"end":{"line":93,"character":80}},"text":"most situations, as it ensures that the lock will be released regardless"},{"range":{"start":{"line":94,"character":8},"end":{"line":94,"character":28}},"text":"of how `body` exits."},{"range":{"start":{"line":95,"character":7},"end":{"line":95,"character":7}},"text":""},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":70}},"text":"- Parameter body: The block to execute while holding the lock."},{"range":{"start":{"line":97,"character":8},"end":{"line":97,"character":51}},"text":"- Returns: The value returned by the block."}]},"functionSignature":{"parameters":[{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"swiftExtension":{"extendedModule":"NIOConcurrencyHelpers"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLock"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":99,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValueyx_tF","interfaceLanguage":"swift"},"pathComponents":["ConditionLock","lock(whenValue:)"],"names":{"title":"lock(whenValue:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":176,"character":8},"end":{"line":176,"character":75}},"text":"Acquire the lock when the state variable is equal to `wantedValue`."},{"range":{"start":{"line":177,"character":7},"end":{"line":177,"character":7}},"text":""},{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":73}},"text":"- Parameter wantedValue: The value to wait for the state variable"},{"range":{"start":{"line":179,"character":8},"end":{"line":179,"character":46}},"text":"    to have before acquiring the lock."}]},"functionSignature":{"parameters":[{"name":"whenValue","internalName":"wantedValue","declarationFragments":[{"kind":"identifier","spelling":"wantedValue"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"wantedValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":180,"character":16}}},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:21NIOConcurrencyHelpers4LockCACycfc","interfaceLanguage":"swift"},"pathComponents":["Lock","init()"],"names":{"title":"init()","navigator":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":26}},"text":"Create a new lock."}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":39,"character":11}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValue14timeoutSecondsSbx_SdtF","interfaceLanguage":"swift"},"pathComponents":["ConditionLock","lock(whenValue:timeoutSeconds:)"],"names":{"title":"lock(whenValue:timeoutSeconds:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"timeoutSeconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"timeoutSeconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"range":{"start":{"line":196,"character":8},"end":{"line":196,"character":75}},"text":"Acquire the lock when the state variable is equal to `wantedValue`,"},{"range":{"start":{"line":197,"character":8},"end":{"line":197,"character":54}},"text":"waiting no more than `timeoutSeconds` seconds."},{"range":{"start":{"line":198,"character":7},"end":{"line":198,"character":7}},"text":""},{"range":{"start":{"line":199,"character":8},"end":{"line":199,"character":73}},"text":"- Parameter wantedValue: The value to wait for the state variable"},{"range":{"start":{"line":200,"character":8},"end":{"line":200,"character":46}},"text":"    to have before acquiring the lock."},{"range":{"start":{"line":201,"character":8},"end":{"line":201,"character":76}},"text":"- Parameter timeoutSeconds: The number of seconds to wait to acquire"},{"range":{"start":{"line":202,"character":8},"end":{"line":202,"character":38}},"text":"    the lock before giving up."},{"range":{"start":{"line":203,"character":8},"end":{"line":203,"character":82}},"text":"- Returns: `true` if the lock was acquired, `false` if the wait timed out."}]},"functionSignature":{"parameters":[{"name":"whenValue","internalName":"wantedValue","declarationFragments":[{"kind":"identifier","spelling":"wantedValue"},{"kind":"text","spelling":": T"}]},{"name":"timeoutSeconds","declarationFragments":[{"kind":"identifier","spelling":"timeoutSeconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Double","preciseIdentifier":"s:Sd"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"wantedValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"timeoutSeconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":204,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC5storeyyxF","interfaceLanguage":"swift"},"pathComponents":["Atomic","store(_:)"],"names":{"title":"store(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":255,"character":8},"end":{"line":255,"character":66}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"start":{"line":256,"character":7},"end":{"line":256,"character":7}},"text":""},{"range":{"start":{"line":257,"character":8},"end":{"line":257,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":258,"character":8},"end":{"line":258,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":259,"character":8},"end":{"line":259,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":260,"character":7},"end":{"line":260,"character":7}},"text":""},{"range":{"start":{"line":261,"character":8},"end":{"line":261,"character":62}},"text":"- Parameter value: The new value to set the object to."}]},"functionSignature":{"parameters":[{"name":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":263,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_addyxs13OpaquePointerV_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_add"],"names":{"title":"atomic_add","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":281,"character":15}}},{"kind":{"identifier":"swift.class","displayName":"Class"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC","interfaceLanguage":"swift"},"pathComponents":["Atomic"],"names":{"title":"Atomic","navigator":[{"kind":"identifier","spelling":"Atomic"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Atomic"}]},"docComment":{"lines":[{"range":{"start":{"line":155,"character":4},"end":{"line":155,"character":51}},"text":"An encapsulation of an atomic primitive object."},{"range":{"start":{"line":156,"character":3},"end":{"line":156,"character":3}},"text":""},{"range":{"start":{"line":157,"character":4},"end":{"line":157,"character":61}},"text":"Atomic objects support a wide range of atomic operations:"},{"range":{"start":{"line":158,"character":3},"end":{"line":158,"character":3}},"text":""},{"range":{"start":{"line":159,"character":4},"end":{"line":159,"character":22}},"text":"- Compare and swap"},{"range":{"start":{"line":160,"character":4},"end":{"line":160,"character":9}},"text":"- Add"},{"range":{"start":{"line":161,"character":4},"end":{"line":161,"character":14}},"text":"- Subtract"},{"range":{"start":{"line":162,"character":4},"end":{"line":162,"character":14}},"text":"- Exchange"},{"range":{"start":{"line":163,"character":4},"end":{"line":163,"character":24}},"text":"- Load current value"},{"range":{"start":{"line":164,"character":4},"end":{"line":164,"character":25}},"text":"- Store current value"},{"range":{"start":{"line":165,"character":3},"end":{"line":165,"character":3}},"text":""},{"range":{"start":{"line":166,"character":4},"end":{"line":166,"character":70}},"text":"Atomic primitives are useful when building constructs that need to"},{"range":{"start":{"line":167,"character":4},"end":{"line":167,"character":68}},"text":"communicate or cooperate across multiple threads. In the case of"},{"range":{"start":{"line":168,"character":4},"end":{"line":168,"character":77}},"text":"SwiftNIO this usually involves communicating across multiple event loops."},{"range":{"start":{"line":169,"character":3},"end":{"line":169,"character":3}},"text":""},{"range":{"start":{"line":170,"character":4},"end":{"line":170,"character":74}},"text":"By necessity, all atomic values are references: after all, it makes no"},{"range":{"start":{"line":171,"character":4},"end":{"line":171,"character":77}},"text":"sense to talk about managing an atomic value when each time it's modified"},{"range":{"start":{"line":172,"character":4},"end":{"line":172,"character":50}},"text":"the thread that modified it gets a local copy!"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Atomic"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AtomicPrimitive","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":174,"character":19}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP11atomic_loadyxs13OpaquePointerVcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_load"],"names":{"title":"atomic_load","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":284,"character":15}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP31nio_atomic_compare_and_exchangeySbSpy13AtomicWrapperQzG_xxtcvpZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_compare_and_exchange"],"names":{"title":"nio_atomic_compare_and_exchange","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":24,"character":15}}},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC10makeAtomic5valueACyxGx_tFZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic","makeAtomic(value:)"],"names":{"title":"makeAtomic(value:)","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAtomic"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"NIOAtomic","preciseIdentifier":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"text","spelling":"<T"},{"kind":"text","spelling":">"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAtomic"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"NIOAtomic","preciseIdentifier":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"text","spelling":"<T"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"range":{"start":{"line":199,"character":8},"end":{"line":199,"character":44}},"text":"Create an atomic object with `value`"}]},"functionSignature":{"parameters":[{"name":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"NIOAtomic","preciseIdentifier":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"text","spelling":"<T"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAtomic"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"NIOAtomic","preciseIdentifier":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"text","spelling":"<T"},{"kind":"text","spelling":">"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":201,"character":23}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC3subyxxF","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic","sub(_:)"],"names":{"title":"sub(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":247,"character":8},"end":{"line":247,"character":52}},"text":"Atomically subtracts `rhs` from this object."},{"range":{"start":{"line":248,"character":7},"end":{"line":248,"character":7}},"text":""},{"range":{"start":{"line":249,"character":8},"end":{"line":249,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":250,"character":8},"end":{"line":250,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":251,"character":8},"end":{"line":251,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":252,"character":7},"end":{"line":252,"character":7}},"text":""},{"range":{"start":{"line":253,"character":8},"end":{"line":253,"character":64}},"text":"- Parameter rhs: The value to subtract from this object."},{"range":{"start":{"line":254,"character":8},"end":{"line":254,"character":86}},"text":"- Returns: The previous value of this object, before the subtraction occurred."}]},"functionSignature":{"parameters":[{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":257,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3subyxxF","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","sub(_:)"],"names":{"title":"sub(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":52}},"text":"Atomically subtracts `rhs` from this object."},{"range":{"start":{"line":97,"character":7},"end":{"line":97,"character":7}},"text":""},{"range":{"start":{"line":98,"character":8},"end":{"line":98,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":99,"character":8},"end":{"line":99,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":100,"character":8},"end":{"line":100,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":101,"character":7},"end":{"line":101,"character":7}},"text":""},{"range":{"start":{"line":102,"character":8},"end":{"line":102,"character":64}},"text":"- Parameter rhs: The value to subtract from this object."},{"range":{"start":{"line":103,"character":8},"end":{"line":103,"character":86}},"text":"- Returns: The previous value of this object, before the subtraction occurred."}]},"functionSignature":{"parameters":[{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":105,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC4lockyyF","interfaceLanguage":"swift"},"pathComponents":["ConditionLock","lock()"],"names":{"title":"lock()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"range":{"start":{"line":153,"character":8},"end":{"line":153,"character":72}},"text":"Acquire the lock, regardless of the value of the state variable."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":154,"character":16}}},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive"],"names":{"title":"NIOAtomicPrimitive","navigator":[{"kind":"identifier","spelling":"NIOAtomicPrimitive"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomicPrimitive"}]},"docComment":{"lines":[{"range":{"start":{"line":16,"character":4},"end":{"line":16,"character":72}},"text":"The protocol that all types that can be made atomic must conform to."},{"range":{"start":{"line":17,"character":3},"end":{"line":17,"character":3}},"text":""},{"range":{"start":{"line":18,"character":4},"end":{"line":18,"character":87}},"text":"**Do not add conformance to this protocol for arbitrary types**. Only a small range"},{"range":{"start":{"line":19,"character":4},"end":{"line":19,"character":85}},"text":"of types have appropriate atomic operations supported by the CPU, and those types"},{"range":{"start":{"line":20,"character":4},"end":{"line":20,"character":42}},"text":"already have conformances implemented."}]},"declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomicPrimitive"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":21,"character":16}}},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC5valuexvp","interfaceLanguage":"swift"},"pathComponents":["ConditionLock","value"],"names":{"title":"value","navigator":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}],"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]},"docComment":{"lines":[{"range":{"start":{"line":163,"character":8},"end":{"line":163,"character":40}},"text":"The value of the state variable."},{"range":{"start":{"line":164,"character":7},"end":{"line":164,"character":7}},"text":""},{"range":{"start":{"line":165,"character":8},"end":{"line":165,"character":78}},"text":"Obtaining the value of the state variable requires acquiring the lock."},{"range":{"start":{"line":166,"character":8},"end":{"line":166,"character":80}},"text":"This means that it is not safe to access this property while holding the"},{"range":{"start":{"line":167,"character":8},"end":{"line":167,"character":60}},"text":"lock: it is only safe to use it when not holding it."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":168,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC18compareAndExchange8expected7desiredSbx_xtF","interfaceLanguage":"swift"},"pathComponents":["Atomic","compareAndExchange(expected:desired:)"],"names":{"title":"compareAndExchange(expected:desired:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"range":{"start":{"line":184,"character":8},"end":{"line":184,"character":80}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"start":{"line":185,"character":8},"end":{"line":185,"character":42}},"text":"replaces the value with `desired`."},{"range":{"start":{"line":186,"character":7},"end":{"line":186,"character":7}},"text":""},{"range":{"start":{"line":187,"character":8},"end":{"line":187,"character":84}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"start":{"line":188,"character":8},"end":{"line":188,"character":85}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"start":{"line":189,"character":8},"end":{"line":189,"character":83}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"start":{"line":190,"character":8},"end":{"line":190,"character":74}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"start":{"line":191,"character":8},"end":{"line":191,"character":22}},"text":"`stdatomic.h`."},{"range":{"start":{"line":192,"character":7},"end":{"line":192,"character":7}},"text":""},{"range":{"start":{"line":193,"character":8},"end":{"line":193,"character":84}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"start":{"line":194,"character":8},"end":{"line":194,"character":40}},"text":"    compare-and-swap to succeed."},{"range":{"start":{"line":195,"character":8},"end":{"line":195,"character":84}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"start":{"line":196,"character":8},"end":{"line":196,"character":21}},"text":"    succeeds."},{"range":{"start":{"line":197,"character":8},"end":{"line":197,"character":84}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"start":{"line":198,"character":8},"end":{"line":198,"character":64}},"text":"    match the current value and so no exchange occurred."}]},"functionSignature":{"parameters":[{"name":"expected","declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": T"}]},{"name":"desired","declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":200,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC4loadxyF","interfaceLanguage":"swift"},"pathComponents":["Atomic","load()"],"names":{"title":"load()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":243,"character":8},"end":{"line":243,"character":62}},"text":"Atomically loads and returns the value of this object."},{"range":{"start":{"line":244,"character":7},"end":{"line":244,"character":7}},"text":""},{"range":{"start":{"line":245,"character":8},"end":{"line":245,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":246,"character":8},"end":{"line":246,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":247,"character":8},"end":{"line":247,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":248,"character":7},"end":{"line":248,"character":7}},"text":""},{"range":{"start":{"line":249,"character":8},"end":{"line":249,"character":43}},"text":"- Returns: The value of this object"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":251,"character":16}}},{"kind":{"identifier":"swift.class","displayName":"Class"},"identifier":{"precise":"s:21NIOConcurrencyHelpers4LockC","interfaceLanguage":"swift"},"pathComponents":["Lock"],"names":{"title":"Lock","navigator":[{"kind":"identifier","spelling":"Lock"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Lock"}]},"docComment":{"lines":[{"range":{"start":{"line":23,"character":4},"end":{"line":23,"character":68}},"text":"A threading lock based on `libpthread` instead of `libdispatch`."},{"range":{"start":{"line":24,"character":3},"end":{"line":24,"character":3}},"text":""},{"range":{"start":{"line":25,"character":4},"end":{"line":25,"character":79}},"text":"This object provides a lock on top of a single `pthread_mutex_t`. This kind"},{"range":{"start":{"line":26,"character":4},"end":{"line":26,"character":80}},"text":"of lock is safe to use with `libpthread`-based threading models, such as the"},{"range":{"start":{"line":27,"character":4},"end":{"line":27,"character":79}},"text":"one used by NIO. On Windows, the lock is based on the substantially similar"},{"range":{"start":{"line":28,"character":4},"end":{"line":28,"character":19}},"text":"`SRWLOCK` type."}]},"declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Lock"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":29,"character":19}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP15nio_atomic_loadyxSpy13AtomicWrapperQzGcvpZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_load"],"names":{"title":"nio_atomic_load","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":28,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9AtomicBoxC18compareAndExchange8expected7desiredSbx_xtF","interfaceLanguage":"swift"},"pathComponents":["AtomicBox","compareAndExchange(expected:desired:)"],"names":{"title":"compareAndExchange(expected:desired:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"range":{"start":{"line":452,"character":8},"end":{"line":452,"character":80}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"start":{"line":453,"character":8},"end":{"line":453,"character":42}},"text":"replaces the value with `desired`."},{"range":{"start":{"line":454,"character":7},"end":{"line":454,"character":7}},"text":""},{"range":{"start":{"line":455,"character":8},"end":{"line":455,"character":84}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"start":{"line":456,"character":8},"end":{"line":456,"character":85}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"start":{"line":457,"character":8},"end":{"line":457,"character":83}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"start":{"line":458,"character":8},"end":{"line":458,"character":74}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"start":{"line":459,"character":8},"end":{"line":459,"character":22}},"text":"`stdatomic.h`."},{"range":{"start":{"line":460,"character":7},"end":{"line":460,"character":7}},"text":""},{"range":{"start":{"line":461,"character":7},"end":{"line":461,"character":7}},"text":""},{"range":{"start":{"line":462,"character":8},"end":{"line":462,"character":117}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"start":{"line":463,"character":8},"end":{"line":463,"character":33}},"text":"           100% CPU load."},{"range":{"start":{"line":464,"character":7},"end":{"line":464,"character":7}},"text":""},{"range":{"start":{"line":465,"character":8},"end":{"line":465,"character":84}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"start":{"line":466,"character":8},"end":{"line":466,"character":40}},"text":"    compare-and-swap to succeed."},{"range":{"start":{"line":467,"character":8},"end":{"line":467,"character":84}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"start":{"line":468,"character":8},"end":{"line":468,"character":21}},"text":"    succeeds."},{"range":{"start":{"line":469,"character":8},"end":{"line":469,"character":84}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"start":{"line":470,"character":8},"end":{"line":470,"character":64}},"text":"    match the current value and so no exchange occurred."}]},"functionSignature":{"parameters":[{"name":"expected","declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": T"}]},{"name":"desired","declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"*","message":"AtomicBox is deprecated without replacement because the original implementation doesn't work.","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":471,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC6unlockyyF","interfaceLanguage":"swift"},"pathComponents":["ConditionLock","unlock()"],"names":{"title":"unlock()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"range":{"start":{"line":158,"character":8},"end":{"line":158,"character":72}},"text":"Release the lock, regardless of the value of the state variable."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":159,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_subyxSpy13AtomicWrapperQzG_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_sub"],"names":{"title":"nio_atomic_sub","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":26,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers4LockC6unlockyyF","interfaceLanguage":"swift"},"pathComponents":["Lock","unlock()"],"names":{"title":"unlock()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"range":{"start":{"line":75,"character":8},"end":{"line":75,"character":25}},"text":"Release the lock."},{"range":{"start":{"line":76,"character":7},"end":{"line":76,"character":7}},"text":""},{"range":{"start":{"line":77,"character":8},"end":{"line":77,"character":78}},"text":"Whenver possible, consider using `withLock` instead of this method and"},{"range":{"start":{"line":78,"character":8},"end":{"line":78,"character":42}},"text":"`lock`, to simplify lock handling."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":79,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC8exchange4withxx_tF","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic","exchange(with:)"],"names":{"title":"exchange(with:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":263,"character":8},"end":{"line":263,"character":74}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"start":{"line":264,"character":7},"end":{"line":264,"character":7}},"text":""},{"range":{"start":{"line":265,"character":8},"end":{"line":265,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":266,"character":8},"end":{"line":266,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":267,"character":8},"end":{"line":267,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":268,"character":7},"end":{"line":268,"character":7}},"text":""},{"range":{"start":{"line":269,"character":8},"end":{"line":269,"character":63}},"text":"- Parameter value: The new value to set this object to."},{"range":{"start":{"line":270,"character":8},"end":{"line":270,"character":60}},"text":"- Returns: The value previously held by this object."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":272,"character":16}}},{"kind":{"identifier":"swift.associatedtype","displayName":"Associated Type"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP13AtomicWrapperQa","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","AtomicWrapper"],"names":{"title":"AtomicWrapper","navigator":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicWrapper"}],"subHeading":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicWrapper"}]},"declarationFragments":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicWrapper"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":22,"character":19}}},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5valueACyxGx_tcfc","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","init(value:)"],"names":{"title":"init(value:)","navigator":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":57,"character":8},"end":{"line":57,"character":45}},"text":"Create an atomic object with `value`."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":59,"character":11}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC8exchange4withxx_tF","interfaceLanguage":"swift"},"pathComponents":["Atomic","exchange(with:)"],"names":{"title":"exchange(with:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":230,"character":8},"end":{"line":230,"character":74}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"start":{"line":231,"character":7},"end":{"line":231,"character":7}},"text":""},{"range":{"start":{"line":232,"character":8},"end":{"line":232,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":234,"character":8},"end":{"line":234,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":235,"character":7},"end":{"line":235,"character":7}},"text":""},{"range":{"start":{"line":236,"character":8},"end":{"line":236,"character":63}},"text":"- Parameter value: The new value to set this object to."},{"range":{"start":{"line":237,"character":8},"end":{"line":237,"character":60}},"text":"- Returns: The value previously held by this object."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":239,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC18compareAndExchange8expected7desiredSbx_xtF","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic","compareAndExchange(expected:desired:)"],"names":{"title":"compareAndExchange(expected:desired:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"range":{"start":{"line":209,"character":8},"end":{"line":209,"character":80}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"start":{"line":210,"character":8},"end":{"line":210,"character":42}},"text":"replaces the value with `desired`."},{"range":{"start":{"line":211,"character":7},"end":{"line":211,"character":7}},"text":""},{"range":{"start":{"line":212,"character":8},"end":{"line":212,"character":84}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"start":{"line":213,"character":8},"end":{"line":213,"character":85}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"start":{"line":214,"character":8},"end":{"line":214,"character":83}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"start":{"line":215,"character":8},"end":{"line":215,"character":74}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"start":{"line":216,"character":8},"end":{"line":216,"character":22}},"text":"`stdatomic.h`."},{"range":{"start":{"line":217,"character":7},"end":{"line":217,"character":7}},"text":""},{"range":{"start":{"line":218,"character":8},"end":{"line":218,"character":84}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"start":{"line":219,"character":8},"end":{"line":219,"character":40}},"text":"    compare-and-swap to succeed."},{"range":{"start":{"line":220,"character":8},"end":{"line":220,"character":84}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"start":{"line":221,"character":8},"end":{"line":221,"character":21}},"text":"    succeeds."},{"range":{"start":{"line":222,"character":8},"end":{"line":222,"character":84}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"start":{"line":223,"character":8},"end":{"line":223,"character":64}},"text":"    match the current value and so no exchange occurred."}]},"functionSignature":{"parameters":[{"name":"expected","declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": T"}]},{"name":"desired","declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":225,"character":16}}},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive"],"names":{"title":"AtomicPrimitive","navigator":[{"kind":"identifier","spelling":"AtomicPrimitive"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicPrimitive"}]},"docComment":{"lines":[{"range":{"start":{"line":272,"character":4},"end":{"line":272,"character":72}},"text":"The protocol that all types that can be made atomic must conform to."},{"range":{"start":{"line":273,"character":3},"end":{"line":273,"character":3}},"text":""},{"range":{"start":{"line":274,"character":4},"end":{"line":274,"character":87}},"text":"**Do not add conformance to this protocol for arbitrary types**. Only a small range"},{"range":{"start":{"line":275,"character":4},"end":{"line":275,"character":85}},"text":"of types have appropriate atomic operations supported by the CPU, and those types"},{"range":{"start":{"line":276,"character":4},"end":{"line":276,"character":42}},"text":"already have conformances implemented."}]},"declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicPrimitive"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":277,"character":16}}},{"kind":{"identifier":"swift.class","displayName":"Class"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9AtomicBoxC","interfaceLanguage":"swift"},"pathComponents":["AtomicBox"],"names":{"title":"AtomicBox","navigator":[{"kind":"identifier","spelling":"AtomicBox"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicBox"}]},"docComment":{"lines":[{"range":{"start":{"line":433,"character":4},"end":{"line":433,"character":102}},"text":"`AtomicBox` is a heap-allocated box which allows lock-free access to an instance of a Swift class."},{"range":{"start":{"line":434,"character":3},"end":{"line":434,"character":3}},"text":""},{"range":{"start":{"line":435,"character":4},"end":{"line":435,"character":108}},"text":"- warning: The use of `AtomicBox` should be avoided because it requires an implementation of a spin-lock"},{"range":{"start":{"line":436,"character":4},"end":{"line":436,"character":64}},"text":"           (more precisely a CAS loop) to operate correctly."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicBox"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" T"},{"kind":"text","spelling":" : AnyObject"}],"accessLevel":"public","availability":[{"domain":"*","message":"AtomicBox is deprecated without replacement because the original implementation doesn't work.","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":438,"character":19}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV8exchange4withxx_tF","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","exchange(with:)"],"names":{"title":"exchange(with:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":109,"character":8},"end":{"line":109,"character":74}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"start":{"line":110,"character":7},"end":{"line":110,"character":7}},"text":""},{"range":{"start":{"line":111,"character":8},"end":{"line":111,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":112,"character":8},"end":{"line":112,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":113,"character":8},"end":{"line":113,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":114,"character":7},"end":{"line":114,"character":7}},"text":""},{"range":{"start":{"line":115,"character":8},"end":{"line":115,"character":63}},"text":"- Parameter value: The new value to set this object to."},{"range":{"start":{"line":116,"character":8},"end":{"line":116,"character":60}},"text":"- Returns: The value previously held by this object."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":118,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP27atomic_compare_and_exchangeySbs13OpaquePointerV_xxtcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_compare_and_exchange"],"names":{"title":"atomic_compare_and_exchange","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":280,"character":15}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP39nio_atomic_create_with_existing_storageyySpy13AtomicWrapperQzG_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_create_with_existing_storage"],"names":{"title":"nio_atomic_create_with_existing_storage","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_create_with_existing_storage"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_create_with_existing_storage"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_create_with_existing_storage"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":23,"character":15}}},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC5valueACyxGx_tcfc","interfaceLanguage":"swift"},"pathComponents":["Atomic","init(value:)"],"names":{"title":"init(value:)","navigator":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":178,"character":8},"end":{"line":178,"character":45}},"text":"Create an atomic object with `value`."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":180,"character":11}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP13atomic_createys13OpaquePointerVxcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_create"],"names":{"title":"atomic_create","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_create"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_create"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_create"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":278,"character":15}}},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9AtomicBoxC5valueACyxGx_tcfc","interfaceLanguage":"swift"},"pathComponents":["AtomicBox","init(value:)"],"names":{"title":"init(value:)","navigator":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"*","message":"AtomicBox is deprecated without replacement because the original implementation doesn't work.","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":441,"character":11}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers4LockC04withC4VoidyyyyKXEKF","interfaceLanguage":"swift"},"pathComponents":["Lock","withLockVoid(_:)"],"names":{"title":"withLockVoid(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLockVoid"},{"kind":"text","spelling":"(() "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLockVoid"},{"kind":"text","spelling":"(() "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}]},"functionSignature":{"parameters":[{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"swiftExtension":{"extendedModule":"NIOConcurrencyHelpers"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLockVoid"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":109,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9AtomicBoxC5storeyyxF","interfaceLanguage":"swift"},"pathComponents":["AtomicBox","store(_:)"],"names":{"title":"store(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":567,"character":8},"end":{"line":567,"character":66}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"start":{"line":568,"character":7},"end":{"line":568,"character":7}},"text":""},{"range":{"start":{"line":569,"character":8},"end":{"line":569,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":570,"character":8},"end":{"line":570,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":571,"character":8},"end":{"line":571,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":572,"character":7},"end":{"line":572,"character":7}},"text":""},{"range":{"start":{"line":573,"character":8},"end":{"line":573,"character":117}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"start":{"line":574,"character":8},"end":{"line":574,"character":33}},"text":"           100% CPU load."},{"range":{"start":{"line":575,"character":7},"end":{"line":575,"character":7}},"text":""},{"range":{"start":{"line":576,"character":8},"end":{"line":576,"character":62}},"text":"- Parameter value: The new value to set the object to."}]},"functionSignature":{"parameters":[{"name":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"*","message":"AtomicBox is deprecated without replacement because the original implementation doesn't work.","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":577,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV18compareAndExchange8expected7desiredSbx_xtF","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","compareAndExchange(expected:desired:)"],"names":{"title":"compareAndExchange(expected:desired:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"range":{"start":{"line":63,"character":8},"end":{"line":63,"character":80}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"start":{"line":64,"character":8},"end":{"line":64,"character":42}},"text":"replaces the value with `desired`."},{"range":{"start":{"line":65,"character":7},"end":{"line":65,"character":7}},"text":""},{"range":{"start":{"line":66,"character":8},"end":{"line":66,"character":84}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"start":{"line":67,"character":8},"end":{"line":67,"character":85}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"start":{"line":68,"character":8},"end":{"line":68,"character":83}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"start":{"line":69,"character":8},"end":{"line":69,"character":74}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"start":{"line":70,"character":8},"end":{"line":70,"character":22}},"text":"`stdatomic.h`."},{"range":{"start":{"line":71,"character":7},"end":{"line":71,"character":7}},"text":""},{"range":{"start":{"line":72,"character":8},"end":{"line":72,"character":84}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"start":{"line":73,"character":8},"end":{"line":73,"character":40}},"text":"    compare-and-swap to succeed."},{"range":{"start":{"line":74,"character":8},"end":{"line":74,"character":84}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"start":{"line":75,"character":8},"end":{"line":75,"character":21}},"text":"    succeeds."},{"range":{"start":{"line":76,"character":8},"end":{"line":76,"character":84}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"start":{"line":77,"character":8},"end":{"line":77,"character":64}},"text":"    match the current value and so no exchange occurred."}]},"functionSignature":{"parameters":[{"name":"expected","declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": T"}]},{"name":"desired","declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":79,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers9NIOAtomicC4loadxyF","interfaceLanguage":"swift"},"pathComponents":["NIOAtomic","load()"],"names":{"title":"load()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":278,"character":8},"end":{"line":278,"character":62}},"text":"Atomically loads and returns the value of this object."},{"range":{"start":{"line":279,"character":7},"end":{"line":279,"character":7}},"text":""},{"range":{"start":{"line":280,"character":8},"end":{"line":280,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":281,"character":8},"end":{"line":281,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":282,"character":8},"end":{"line":282,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":283,"character":7},"end":{"line":283,"character":7}},"text":""},{"range":{"start":{"line":284,"character":8},"end":{"line":284,"character":43}},"text":"- Returns: The value of this object"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":286,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV7destroyyyF","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","destroy()"],"names":{"title":"destroy()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"destroy"},{"kind":"text","spelling":"()"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"destroy"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"range":{"start":{"line":146,"character":8},"end":{"line":146,"character":33}},"text":"Destroy the atomic value."},{"range":{"start":{"line":147,"character":7},"end":{"line":147,"character":7}},"text":""},{"range":{"start":{"line":148,"character":8},"end":{"line":148,"character":125}},"text":"This method is the source of the unsafety of this structure. This *must* be called, or you will leak memory with each"},{"range":{"start":{"line":149,"character":8},"end":{"line":149,"character":15}},"text":"atomic."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"destroy"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":150,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP15atomic_exchangeyxs13OpaquePointerV_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["AtomicPrimitive","atomic_exchange"],"names":{"title":"atomic_exchange","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"OpaquePointer","preciseIdentifier":"s:s13OpaquePointerV"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":283,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers6AtomicC3subyxxF","interfaceLanguage":"swift"},"pathComponents":["Atomic","sub(_:)"],"names":{"title":"sub(_:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"(T"},{"kind":"text","spelling":") -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":217,"character":8},"end":{"line":217,"character":52}},"text":"Atomically subtracts `rhs` from this object."},{"range":{"start":{"line":218,"character":7},"end":{"line":218,"character":7}},"text":""},{"range":{"start":{"line":219,"character":8},"end":{"line":219,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":220,"character":8},"end":{"line":220,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":221,"character":8},"end":{"line":221,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":222,"character":7},"end":{"line":222,"character":7}},"text":""},{"range":{"start":{"line":223,"character":8},"end":{"line":223,"character":64}},"text":"- Parameter rhs: The value to subtract from this object."},{"range":{"start":{"line":224,"character":8},"end":{"line":224,"character":86}},"text":"- Returns: The previous value of this object, before the subtraction occurred."}]},"functionSignature":{"parameters":[{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":") -> T"}],"accessLevel":"public","availability":[{"domain":"*","message":"please use NIOAtomic instead","isUnconditionallyDeprecated":true}],"location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":226,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers13ConditionLockC6unlock9withValueyx_tF","interfaceLanguage":"swift"},"pathComponents":["ConditionLock","unlock(withValue:)"],"names":{"title":"unlock(withValue:)","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"withValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"withValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"range":{"start":{"line":261,"character":8},"end":{"line":261,"character":67}},"text":"Release the lock, setting the state variable to `newValue`."},{"range":{"start":{"line":262,"character":7},"end":{"line":262,"character":7}},"text":""},{"range":{"start":{"line":263,"character":8},"end":{"line":263,"character":77}},"text":"- Parameter newValue: The value to give to the state variable when we"},{"range":{"start":{"line":264,"character":8},"end":{"line":264,"character":29}},"text":"    release the lock."}]},"functionSignature":{"parameters":[{"name":"withValue","internalName":"newValue","declarationFragments":[{"kind":"identifier","spelling":"newValue"},{"kind":"text","spelling":": T"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"withValue"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"newValue"},{"kind":"text","spelling":": T"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift","position":{"line":265,"character":16}}},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP19nio_atomic_exchangeyxSpy13AtomicWrapperQzG_xtcvpZ","interfaceLanguage":"swift"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_exchange"],"names":{"title":"nio_atomic_exchange","navigator":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":".AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift","position":{"line":27,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV4loadxyF","interfaceLanguage":"swift"},"pathComponents":["UnsafeEmbeddedAtomic","load()"],"names":{"title":"load()","navigator":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}]},"docComment":{"lines":[{"range":{"start":{"line":122,"character":8},"end":{"line":122,"character":62}},"text":"Atomically loads and returns the value of this object."},{"range":{"start":{"line":123,"character":7},"end":{"line":123,"character":7}},"text":""},{"range":{"start":{"line":124,"character":8},"end":{"line":124,"character":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"start":{"line":125,"character":8},"end":{"line":125,"character":85}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"start":{"line":126,"character":8},"end":{"line":126,"character":55}},"text":"event will be ordered before or after this one."},{"range":{"start":{"line":127,"character":7},"end":{"line":127,"character":7}},"text":""},{"range":{"start":{"line":128,"character":8},"end":{"line":128,"character":43}},"text":"- Returns: The value of this object"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> T"}],"accessLevel":"public","location":{"uri":"file:///Users/owenvoorhees/Documents/Development/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift","position":{"line":130,"character":16}}}],"relationships":[{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV7destroyyyF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC4loadxyF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC6unlock9withValueyx_tF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP12atomic_storeyys13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV4loadxyF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_subyxs13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_addyxSpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockCACycfc","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC4loadxyF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP16nio_atomic_storeyySpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP14atomic_destroyyys13OpaquePointerVcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC4lockyyF","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC6unlockyyF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC04withC0yxxyKXEKlF","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_addyxs13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC4loadxyF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC3subyxxF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP31nio_atomic_compare_and_exchangeySbSpy13AtomicWrapperQzG_xxtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP11atomic_loadyxs13OpaquePointerVcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC5valuexvp","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3subyxxF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP15nio_atomic_loadyxSpy13AtomicWrapperQzGcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC04withC4VoidyyyyKXEKF","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP13atomic_createys13OpaquePointerVxcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC4lockyyF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC10makeAtomic5valueACyxGx_tFZ","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC3subyxxF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP13AtomicWrapperQa","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC3addyxxF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValue14timeoutSecondsSbx_SdtF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC5storeyyxF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_subyxSpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3addyxxF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP15atomic_exchangeyxs13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC5storeyyxF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValueyx_tF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP39nio_atomic_create_with_existing_storageyySpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC3addyxxF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC5storeyyxF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP19nio_atomic_exchangeyxSpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP27atomic_compare_and_exchangeySbs13OpaquePointerV_xxtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5storeyyxF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC6unlockyyF","target":"s:21NIOConcurrencyHelpers4LockC"}]}